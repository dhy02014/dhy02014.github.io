<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-09-22T20:42:26+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Tech Blog</title><subtitle>GitHub Pages용 기술 블로그 사이트 및 포트폴리오</subtitle><entry><title type="html">Jekyll 블로그 설정 완료</title><link href="http://localhost:4000/%EA%B0%9C%EB%B0%9C/2025/09/22/jekyll-setup/" rel="alternate" type="text/html" title="Jekyll 블로그 설정 완료" /><published>2025-09-22T18:15:00+09:00</published><updated>2025-09-22T18:15:00+09:00</updated><id>http://localhost:4000/%EA%B0%9C%EB%B0%9C/2025/09/22/jekyll-setup</id><content type="html" xml:base="http://localhost:4000/%EA%B0%9C%EB%B0%9C/2025/09/22/jekyll-setup/"><![CDATA[<h1 id="jekyll-블로그-설정-완료">Jekyll 블로그 설정 완료</h1>

<p>GitHub Pages에서 Markdown 파일을 자동으로 렌더링하는 Jekyll 블로그가 성공적으로 설정되었습니다! 🎉</p>

<h2 id="주요-변경사항">주요 변경사항</h2>

<h3 id="1-jekyll-설치-및-설정">1. Jekyll 설치 및 설정</h3>

<ul>
  <li><strong>Ruby 3.4.6 설치</strong> (Homebrew 사용)</li>
  <li><strong>Jekyll 및 GitHub Pages gem 설치</strong></li>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 설정 파일 생성</li>
</ul>

<h3 id="2-디렉토리-구조-변경">2. 디렉토리 구조 변경</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── _config.yml          # Jekyll 설정
├── _layouts/            # 레이아웃 템플릿
│   ├── default.html     # 기본 레이아웃
│   └── post.html        # 포스트 레이아웃
├── _posts/              # 블로그 포스트 (Markdown)
├── _site/               # 생성된 정적 파일
├── css/                 # 스타일시트
├── Gemfile              # Ruby 의존성
└── index.html           # 메인 페이지
</code></pre></div></div>

<h3 id="3-자동화된-워크플로우">3. 자동화된 워크플로우</h3>

<ul>
  <li><strong>GitHub Actions</strong>를 통한 자동 빌드 및 배포</li>
  <li>Jekyll 전용 워크플로우 설정</li>
</ul>

<h2 id="사용법">사용법</h2>

<p>이제 <code class="language-plaintext highlighter-rouge">_posts/</code> 디렉토리에 다음 형식으로 Markdown 파일을 추가하면 자동으로 블로그 포스트가 생성됩니다:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">포스트</span><span class="nv"> </span><span class="s">제목"</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">YYYY-MM-DD HH:MM:SS +0900</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">카테고리</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">태그1</span><span class="pi">,</span> <span class="nv">태그2</span><span class="pi">]</span>
<span class="na">author</span><span class="pi">:</span> <span class="s2">"</span><span class="s">작성자명"</span>
<span class="na">excerpt</span><span class="pi">:</span> <span class="s2">"</span><span class="s">포스트</span><span class="nv"> </span><span class="s">요약"</span>
<span class="nn">---</span>

<span class="gh"># 포스트 내용</span>

Markdown으로 작성된 내용이 여기에 들어갑니다.
</code></pre></div></div>

<h2 id="파일명-규칙">파일명 규칙</h2>

<p>포스트 파일명은 다음 형식을 따라야 합니다:</p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">YYYY-MM-DD-title.md</code></p>
</blockquote>

<p><strong>예시:</strong> <code class="language-plaintext highlighter-rouge">2025-09-22-my-first-post.md</code></p>

<h2 id="로컬-테스트">로컬 테스트</h2>

<p>로컬에서 사이트를 테스트하려면:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 의존성 설치</span>
bundle <span class="nb">install</span>

<span class="c"># 로컬 서버 실행</span>
bundle <span class="nb">exec </span>jekyll serve

<span class="c"># 브라우저에서 확인</span>
open http://localhost:4000
</code></pre></div></div>

<h2 id="주요-기능">주요 기능</h2>

<ul>
  <li>✅ <strong>자동 배포</strong>: GitHub에 push하면 자동으로 사이트 업데이트</li>
  <li>✅ <strong>마크다운 지원</strong>: <code class="language-plaintext highlighter-rouge">.md</code> 파일로 쉽게 포스트 작성</li>
  <li>✅ <strong>코드 하이라이팅</strong>: 다양한 언어의 코드 블록 지원</li>
  <li>✅ <strong>반응형 디자인</strong>: 모바일과 데스크톱 모두 지원</li>
  <li>✅ <strong>태그 및 카테고리</strong>: 포스트 분류 및 검색 기능</li>
</ul>

<p>이제 Markdown 파일만 추가하면 자동으로 예쁜 블로그 포스트가 생성됩니다! 🚀</p>]]></content><author><name>개발자</name></author><category term="개발" /><category term="jekyll" /><category term="github-pages" /><category term="blog" /><category term="setup" /><summary type="html"><![CDATA[GitHub Pages에서 Markdown 파일을 자동으로 렌더링하는 Jekyll 블로그 설정 과정과 주요 변경사항을 소개합니다.]]></summary></entry><entry><title type="html">포트폴리오 프로젝트 - 웹 애플리케이션 개발</title><link href="http://localhost:4000/portfolio/2025/09/22/portfolio-sample/" rel="alternate" type="text/html" title="포트폴리오 프로젝트 - 웹 애플리케이션 개발" /><published>2025-09-22T18:00:00+09:00</published><updated>2025-09-22T18:00:00+09:00</updated><id>http://localhost:4000/portfolio/2025/09/22/portfolio-sample</id><content type="html" xml:base="http://localhost:4000/portfolio/2025/09/22/portfolio-sample/"><![CDATA[<h1 id="포트폴리오-프로젝트---웹-애플리케이션-개발">포트폴리오 프로젝트 - 웹 애플리케이션 개발</h1>

<h2 id="프로젝트-개요">프로젝트 개요</h2>

<p>React와 Node.js를 활용한 풀스택 웹 애플리케이션 개발 프로젝트입니다.</p>

<h2 id="주요-기능">주요 기능</h2>

<ul>
  <li>사용자 인증 및 권한 관리</li>
  <li>실시간 데이터 동기화</li>
  <li>반응형 UI/UX 디자인</li>
  <li>RESTful API 설계</li>
</ul>

<h2 id="기술-스택">기술 스택</h2>

<h3 id="frontend">Frontend</h3>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// React 컴포넌트 예시</span>
<span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">useState</span><span class="p">,</span> <span class="nx">useEffect</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">Dashboard</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">data</span><span class="p">,</span> <span class="nx">setData</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([]);</span>
  
  <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">fetchData</span><span class="p">();</span>
  <span class="p">},</span> <span class="p">[]);</span>
  
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">dashboard</span><span class="dl">"</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">대시보드</span><span class="o">&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span>      <span class="p">{</span><span class="nx">data</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">item</span> <span class="o">=&gt;</span> <span class="p">(</span>
        <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">key</span><span class="o">=</span><span class="p">{</span><span class="nx">item</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">item</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>      <span class="p">))}</span>
    <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<h3 id="backend">Backend</h3>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Express.js API 엔드포인트</span>
<span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/api/users</span><span class="dl">'</span><span class="p">,</span> <span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">User</span><span class="p">.</span><span class="nx">findAll</span><span class="p">();</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="nx">users</span><span class="p">);</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">500</span><span class="p">).</span><span class="nx">json</span><span class="p">({</span> <span class="na">error</span><span class="p">:</span> <span class="nx">error</span><span class="p">.</span><span class="nx">message</span> <span class="p">});</span>
  <span class="p">}</span>
<span class="p">});</span>
</code></pre></div></div>

<h2 id="성과-및-결과">성과 및 결과</h2>

<ul>
  <li><strong>성능 개선</strong>: 페이지 로딩 속도 40% 향상</li>
  <li><strong>사용자 경험</strong>: 모바일 반응성 100% 달성</li>
  <li><strong>코드 품질</strong>: ESLint 규칙 준수율 95%</li>
</ul>

<h2 id="배운-점">배운 점</h2>

<ol>
  <li><strong>상태 관리</strong>: Redux를 통한 복잡한 상태 관리 경험</li>
  <li><strong>API 설계</strong>: RESTful 원칙을 따른 확장 가능한 API 구조</li>
  <li><strong>테스팅</strong>: Jest와 React Testing Library를 활용한 단위 테스트</li>
</ol>

<h2 id="향후-개선-사항">향후 개선 사항</h2>

<ul>
  <li>GraphQL 도입으로 데이터 페칭 최적화</li>
  <li>Docker를 활용한 배포 환경 구축</li>
  <li>CI/CD 파이프라인 자동화</li>
</ul>]]></content><author><name>&lt;name&gt;</name></author><category term="portfolio" /><category term="react" /><category term="nodejs" /><category term="fullstack" /><category term="web-development" /><summary type="html"><![CDATA[포트폴리오 프로젝트 - 웹 애플리케이션 개발]]></summary></entry><entry><title type="html">샘플 포스트</title><link href="http://localhost:4000/blog/2025/09/22/sample/" rel="alternate" type="text/html" title="샘플 포스트" /><published>2025-09-22T18:00:00+09:00</published><updated>2025-09-22T18:00:00+09:00</updated><id>http://localhost:4000/blog/2025/09/22/sample</id><content type="html" xml:base="http://localhost:4000/blog/2025/09/22/sample/"><![CDATA[<h1 id="샘플-포스트">샘플 포스트</h1>

<p>이것은 마크다운으로 작성된 샘플 포스트입니다.</p>

<h2 id="코드-블록-예시">코드 블록 예시</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">hello</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello World!</span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="리스트">리스트</h2>

<ul>
  <li>항목 1</li>
  <li>항목 2</li>
  <li>항목 3</li>
</ul>

<p><strong>굵은 글씨</strong>와 <em>기울임 글씨</em>도 지원됩니다.</p>]]></content><author><name>&lt;name&gt;</name></author><category term="blog" /><category term="sample" /><category term="markdown" /><summary type="html"><![CDATA[샘플 포스트]]></summary></entry><entry><title type="html">Hproject</title><link href="http://localhost:4000/2025/09/22/hproject/" rel="alternate" type="text/html" title="Hproject" /><published>2025-09-22T00:00:00+09:00</published><updated>2025-09-22T00:00:00+09:00</updated><id>http://localhost:4000/2025/09/22/hproject</id><content type="html" xml:base="http://localhost:4000/2025/09/22/hproject/"><![CDATA[<h1 id="안녕하세요">안녕하세요.</h1>

<h2 id="test-입니다">test 입니다.</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">json</span>

<span class="k">print</span><span class="p">(</span><span class="s">'test'</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name>&lt;name&gt;</name></author><summary type="html"><![CDATA[안녕하세요.]]></summary></entry><entry><title type="html">Test</title><link href="http://localhost:4000/2025/09/22/test/" rel="alternate" type="text/html" title="Test" /><published>2025-09-22T00:00:00+09:00</published><updated>2025-09-22T00:00:00+09:00</updated><id>http://localhost:4000/2025/09/22/test</id><content type="html" xml:base="http://localhost:4000/2025/09/22/test/"><![CDATA[<h1 id="안녕하세요">안녕하세요.</h1>

<h2 id="test-입니다">test 입니다.</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">json</span>

<span class="k">print</span><span class="p">(</span><span class="s">'test'</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name>&lt;name&gt;</name></author><summary type="html"><![CDATA[안녕하세요.]]></summary></entry></feed>